"""Initial schema (including rejected flag)

Revision ID: ffc216829cfe
Revises: 
Create Date: 2025-05-20 01:38:18.980185

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ffc216829cfe'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('provider', sa.Enum('local', 'google', 'github', name='provider_enum'), nullable=False),
    sa.Column('provider_id', sa.String(length=255), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('failed_logins', sa.Integer(), nullable=False),
    sa.Column('reset_token', sa.String(length=36), nullable=True),
    sa.Column('reset_token_expiry', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('blog_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_format', sa.String(length=20), nullable=False),
    sa.Column('excerpt', sa.String(length=500), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=False),
    sa.Column('comments_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blog_posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blog_posts_slug'), ['slug'], unique=True)

    op.create_table('ip_scan_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ip', sa.String(length=45), nullable=False),
    sa.Column('profile', sa.Text(), nullable=False),
    sa.Column('abuse_risk', sa.String(length=50), nullable=True),
    sa.Column('scanned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reported_urls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2083), nullable=False),
    sa.Column('label', sa.String(length=255), nullable=False),
    sa.Column('reported_at', sa.DateTime(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('rejected', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('url_scan_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2083), nullable=False),
    sa.Column('data', sa.Text(), nullable=False),
    sa.Column('scanned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['blog_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['blog_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('post_id', 'user_id', name='unique_post_user_like')
    )
    with op.batch_alter_table('ab_permission_view_role', schema=None) as batch_op:
        batch_op.drop_index('idx_permission_view_id')
        batch_op.drop_index('idx_role_id')

    op.drop_table('ab_permission_view_role')
    op.drop_table('ab_user_role')
    with op.batch_alter_table('ab_permission_view', schema=None) as batch_op:
        batch_op.drop_index('idx_permission_id')
        batch_op.drop_index('idx_view_menu_id')

    op.drop_table('ab_permission_view')
    op.drop_table('ab_register_user')
    op.drop_table('ab_permission')
    op.drop_table('ab_view_menu')
    op.drop_table('ab_role')
    with op.batch_alter_table('ab_group_role', schema=None) as batch_op:
        batch_op.drop_index('idx_group_id')
        batch_op.drop_index('idx_group_role_id')

    op.drop_table('ab_group_role')
    op.drop_table('ab_group')
    op.drop_table('ab_user')
    with op.batch_alter_table('ab_user_group', schema=None) as batch_op:
        batch_op.drop_index('idx_user_group_id')
        batch_op.drop_index('idx_user_id')

    op.drop_table('ab_user_group')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ab_user_group',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['ab_group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'group_id')
    )
    with op.batch_alter_table('ab_user_group', schema=None) as batch_op:
        batch_op.create_index('idx_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_user_group_id', ['group_id'], unique=False)

    op.create_table('ab_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), nullable=True),
    sa.Column('active', sa.BOOLEAN(), nullable=True),
    sa.Column('email', sa.VARCHAR(length=320), nullable=False),
    sa.Column('last_login', sa.DATETIME(), nullable=True),
    sa.Column('login_count', sa.INTEGER(), nullable=True),
    sa.Column('fail_login_count', sa.INTEGER(), nullable=True),
    sa.Column('created_on', sa.DATETIME(), nullable=True),
    sa.Column('changed_on', sa.DATETIME(), nullable=True),
    sa.Column('created_by_fk', sa.INTEGER(), nullable=True),
    sa.Column('changed_by_fk', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ab_group',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('label', sa.VARCHAR(length=150), nullable=True),
    sa.Column('description', sa.VARCHAR(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ab_group_role',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['ab_group.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'role_id')
    )
    with op.batch_alter_table('ab_group_role', schema=None) as batch_op:
        batch_op.create_index('idx_group_role_id', ['role_id'], unique=False)
        batch_op.create_index('idx_group_id', ['group_id'], unique=False)

    op.create_table('ab_role',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ab_view_menu',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=250), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ab_permission',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ab_register_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), nullable=False),
    sa.Column('registration_date', sa.DATETIME(), nullable=True),
    sa.Column('registration_hash', sa.VARCHAR(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ab_permission_view',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('permission_id', sa.INTEGER(), nullable=True),
    sa.Column('view_menu_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['ab_permission.id'], ),
    sa.ForeignKeyConstraint(['view_menu_id'], ['ab_view_menu.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('permission_id', 'view_menu_id')
    )
    with op.batch_alter_table('ab_permission_view', schema=None) as batch_op:
        batch_op.create_index('idx_view_menu_id', ['view_menu_id'], unique=False)
        batch_op.create_index('idx_permission_id', ['permission_id'], unique=False)

    op.create_table('ab_user_role',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id')
    )
    op.create_table('ab_permission_view_role',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('permission_view_id', sa.INTEGER(), nullable=True),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['permission_view_id'], ['ab_permission_view.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('permission_view_id', 'role_id')
    )
    with op.batch_alter_table('ab_permission_view_role', schema=None) as batch_op:
        batch_op.create_index('idx_role_id', ['role_id'], unique=False)
        batch_op.create_index('idx_permission_view_id', ['permission_view_id'], unique=False)

    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_table('url_scan_history')
    op.drop_table('reported_urls')
    op.drop_table('ip_scan_history')
    with op.batch_alter_table('blog_posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blog_posts_slug'))

    op.drop_table('blog_posts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
